import { test, expect } from '@playwright/test';

test.describe('Footer Button Icon Responsive Behavior', () => {
  test('should hide icon at 768px breakpoint', async ({ page }) => {
    // Navegar a la p치gina
    await page.goto('/');
    
    // Configurar viewport a 768px (breakpoint md)
    await page.setViewportSize({ width: 768, height: 1024 });
    
    // Esperar a que la p치gina cargue completamente
    await page.waitForLoadState('networkidle');
    
    // Hacer scroll hacia abajo para activar el bot칩n del footer
    await page.evaluate(() => {
      window.scrollTo(0, document.body.scrollHeight);
    });
    
    // Esperar un momento para que se ejecute el JavaScript
    await page.waitForTimeout(1000);
    
    // Verificar que el bot칩n est치 visible
    const footerButton = page.locator('#reserva-ya-footer-btn');
    await expect(footerButton).toBeVisible();
    
    // Verificar que el icono est치 oculto en 768px
    const iconSpan = footerButton.locator('span').first();
    await expect(iconSpan).toHaveClass(/md:hidden/);
    
    // Verificar que el icono no es visible debido a la clase md:hidden
    const iconStyles = await iconSpan.evaluate(el => getComputedStyle(el));
    expect(iconStyles.display).toBe('none');
    
    // Verificar que el texto del bot칩n sigue siendo visible
    const textSpan = footerButton.locator('span:has-text("춰Reserva YA!")');
    await expect(textSpan).toBeVisible();
    
    // Verificar que el n칰mero de tel칠fono sigue siendo visible
    const phoneSpan = footerButton.locator('span:has-text("640 50 60 84")');
    await expect(phoneSpan).toBeVisible();
  });
  
  test('should show icon at smaller breakpoints', async ({ page }) => {
    // Navegar a la p치gina
    await page.goto('/');
    
    // Configurar viewport a tama침o m칩vil (menor a 768px)
    await page.setViewportSize({ width: 480, height: 800 });
    
    // Esperar a que la p치gina cargue completamente
    await page.waitForLoadState('networkidle');
    
    // Hacer scroll hacia abajo para activar el bot칩n del footer
    await page.evaluate(() => {
      window.scrollTo(0, document.body.scrollHeight);
    });
    
    // Esperar un momento para que se ejecute el JavaScript
    await page.waitForTimeout(1000);
    
    // Verificar que el bot칩n est치 visible
    const footerButton = page.locator('#reserva-ya-footer-btn');
    await expect(footerButton).toBeVisible();
    
    // Verificar que el icono es visible en pantallas peque침as
    const iconSpan = footerButton.locator('span').first();
    await expect(iconSpan).toBeVisible();
    
    // Verificar que contiene el emoji del icono
    await expect(iconSpan).toContainText('游눫');
  });
  
  test('should show icon at larger breakpoints', async ({ page }) => {
    // Navegar a la p치gina
    await page.goto('/');
    
    // Configurar viewport a tama침o desktop (mayor a 768px)
    await page.setViewportSize({ width: 1024, height: 768 });
    
    // Esperar a que la p치gina cargue completamente
    await page.waitForLoadState('networkidle');
    
    // Hacer scroll hacia abajo para activar el bot칩n del footer
    await page.evaluate(() => {
      window.scrollTo(0, document.body.scrollHeight);
    });
    
    // Esperar un momento para que se ejecute el JavaScript
    await page.waitForTimeout(1000);
    
    // Verificar que el bot칩n est치 visible
    const footerButton = page.locator('#reserva-ya-footer-btn');
    await expect(footerButton).toBeVisible();
    
    // Verificar que el icono es visible en pantallas grandes
    const iconSpan = footerButton.locator('span').first();
    await expect(iconSpan).toBeVisible();
    
    // Verificar que contiene el emoji del icono
    await expect(iconSpan).toContainText('游눫');
  });
});
