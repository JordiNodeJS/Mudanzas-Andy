---
// ImageCarousel.astro - Componente de carrusel responsivo para imágenes
// Sigue las convenciones del proyecto Mudanzas ANDY

interface Props {
  title?: string;
  description?: string;
  images?: Array<{
    baseName: string;
    alt: string;
    caption?: string;
  }>;
  autoplay?: boolean;
  autoplayInterval?: number;
}

const {
  title = "Nuestros Proyectos Destacados",
  description = "Descubre algunos de nuestros trabajos más recientes",
  images = [],
  autoplay = true,
  autoplayInterval = 5000,
} = Astro.props satisfies Props;

// Si no se pasan imágenes, cargar desde carousel-images.json
let carouselImages = images;
if (images.length === 0) {
  // Cargar las imágenes del carrusel generadas por el script
  carouselImages = [
    { baseName: "/gallery/optimized/carrusel-01", alt: "Proyecto de mudanza 01 - Mudanzas ANDY Barcelona", caption: "Mudanza integral residencial" },
    { baseName: "/gallery/optimized/carrusel-02", alt: "Proyecto de mudanza 02 - Mudanzas ANDY Barcelona", caption: "Servicio de embalaje profesional" },
    { baseName: "/gallery/optimized/carrusel-03", alt: "Proyecto de mudanza 03 - Mudanzas ANDY Barcelona", caption: "Mudanza de oficina" },
    { baseName: "/gallery/optimized/carrusel-04", alt: "Proyecto de mudanza 04 - Mudanzas ANDY Barcelona", caption: "Transporte seguro de mobiliario" },
    { baseName: "/gallery/optimized/carrusel-05", alt: "Proyecto de mudanza 05 - Mudanzas ANDY Barcelona", caption: "Mudanza nacional" },
    { baseName: "/gallery/optimized/carrusel-06", alt: "Proyecto de mudanza 06 - Mudanzas ANDY Barcelona", caption: "Guardamuebles y almacenamiento" },
    { baseName: "/gallery/optimized/carrusel-07", alt: "Proyecto de mudanza 07 - Mudanzas ANDY Barcelona", caption: "Mudanza internacional" },
    { baseName: "/gallery/optimized/carrusel-08", alt: "Proyecto de mudanza 08 - Mudanzas ANDY Barcelona", caption: "Servicio de montaje" },
    { baseName: "/gallery/optimized/carrusel-09", alt: "Proyecto de mudanza 09 - Mudanzas ANDY Barcelona", caption: "Mudanza express" },
    { baseName: "/gallery/optimized/carrusel-11", alt: "Proyecto de mudanza 11 - Mudanzas ANDY Barcelona", caption: "Mudanza de piano" },
    { baseName: "/gallery/optimized/carrusel-12", alt: "Proyecto de mudanza 12 - Mudanzas ANDY Barcelona", caption: "Servicio premium" },
    { baseName: "/gallery/optimized/carrusel-14", alt: "Proyecto de mudanza 14 - Mudanzas ANDY Barcelona", caption: "Mudanza local Barcelona" },
    { baseName: "/gallery/optimized/carrusel-15", alt: "Proyecto de mudanza 15 - Mudanzas ANDY Barcelona", caption: "Mudanza económica" },
    { baseName: "/gallery/optimized/carrusel-16", alt: "Proyecto de mudanza 16 - Mudanzas ANDY Barcelona", caption: "Mudanza de lujo" },
    { baseName: "/gallery/optimized/carrusel-17", alt: "Proyecto de mudanza 17 - Mudanzas ANDY Barcelona", caption: "Transporte de arte" },
    { baseName: "/gallery/optimized/carrusel-18", alt: "Proyecto de mudanza 18 - Mudanzas ANDY Barcelona", caption: "Mudanza completa" },
  ];
}
---

<section 
  class="py-12 lg:py-16 relative overflow-hidden bg-gradient-to-b from-gray-50 to-white"
  id="carousel"
>
  <div class="container mx-auto px-4">
    <!-- Header del carrusel -->
    <div class="text-center mb-8 lg:mb-12">
      <h2 class="text-2xl sm:text-3xl lg:text-4xl font-bold mb-3 text-[rgb(var(--color-primary))]">
        🎬 {title}
      </h2>
      <p class="text-base lg:text-lg max-w-3xl mx-auto text-[rgb(var(--color-secondary))]">
        {description}
      </p>
    </div>

    <!-- Carrusel -->
    <div class="carousel-container max-w-5xl mx-auto relative">
      <!-- Slides -->
      <div class="carousel-slides overflow-hidden rounded-2xl shadow-2xl relative">
        {carouselImages.map((image, index) => (
          <div 
            class={`carousel-slide ${index === 0 ? 'active' : ''}`}
            data-slide-index={index}
          >
            <picture>
              <source
                srcset={`${image.baseName}-640w.avif 640w, ${image.baseName}-768w.avif 768w, ${image.baseName}-1024w.avif 1024w, ${image.baseName}-1280w.avif 1280w, ${image.baseName}-1920w.avif 1920w`}
                type="image/avif"
                sizes="(max-width: 768px) 100vw, (max-width: 1280px) 80vw, 1200px"
              />
              <source
                srcset={`${image.baseName}-640w.webp 640w, ${image.baseName}-768w.webp 768w, ${image.baseName}-1024w.webp 1024w, ${image.baseName}-1280w.webp 1280w, ${image.baseName}-1920w.webp 1920w`}
                type="image/webp"
                sizes="(max-width: 768px) 100vw, (max-width: 1280px) 80vw, 1200px"
              />
              <img
                src={`${image.baseName}-1024w.jpg`}
                srcset={`${image.baseName}-640w.jpg 640w, ${image.baseName}-768w.jpg 768w, ${image.baseName}-1024w.jpg 1024w, ${image.baseName}-1280w.jpg 1280w, ${image.baseName}-1920w.jpg 1920w`}
                alt={image.alt}
                loading={index === 0 ? "eager" : "lazy"}
                decoding="async"
                sizes="(max-width: 768px) 100vw, (max-width: 1280px) 80vw, 1200px"
                class="carousel-image w-full h-auto object-cover"
                width="1200"
                height="800"
              />
            </picture>
            
            <!-- Caption overlay -->
            {image.caption && (
              <div class="carousel-caption absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 via-black/50 to-transparent p-4 sm:p-6">
                <p class="text-white text-sm sm:text-base lg:text-lg font-medium text-center">
                  {image.caption}
                </p>
              </div>
            )}
          </div>
        ))}
      </div>

      <!-- Controles de navegación -->
      <button 
        class="carousel-prev absolute left-2 sm:left-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white text-[rgb(var(--color-primary))] rounded-full p-2 sm:p-3 shadow-lg transition-all duration-300 hover:scale-110 z-10"
        aria-label="Imagen anterior"
      >
        <svg class="w-5 h-5 sm:w-6 sm:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>

      <button 
        class="carousel-next absolute right-2 sm:right-4 top-1/2 -translate-y-1/2 bg-white/90 hover:bg-white text-[rgb(var(--color-primary))] rounded-full p-2 sm:p-3 shadow-lg transition-all duration-300 hover:scale-110 z-10"
        aria-label="Siguiente imagen"
      >
        <svg class="w-5 h-5 sm:w-6 sm:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>

      <!-- Indicadores de puntos -->
      <div class="carousel-indicators flex justify-center gap-2 mt-4 sm:mt-6">
        {carouselImages.map((_, index) => (
          <button 
            class={`carousel-indicator w-2 h-2 sm:w-3 sm:h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-[rgb(var(--color-primary))] w-6 sm:w-8' : 'bg-gray-300 hover:bg-gray-400'}`}
            data-slide-to={index}
            aria-label={`Ir a imagen ${index + 1}`}
          ></button>
        ))}
      </div>

      <!-- Contador de slides -->
      <div class="carousel-counter text-center mt-3 sm:mt-4 text-sm sm:text-base text-[rgb(var(--color-secondary))] font-medium">
        <span class="current-slide">1</span> / <span class="total-slides">{carouselImages.length}</span>
      </div>
    </div>
  </div>
</section>

<!-- JavaScript para funcionalidad del carrusel -->
<script is:inline define:vars={{ autoplay, autoplayInterval }}>
  // Función de inicialización del carrusel
  function initCarousel() {
    // Evitar múltiples inicializaciones
    if (window.carouselInitialized) {
      return;
    }

    let currentSlide = 0;
    let autoplayTimer = null;
    const slides = document.querySelectorAll('.carousel-slide');
    const totalSlides = slides.length;

    if (totalSlides === 0) {
      return; // No hay slides, salir
    }

    // Función para mostrar slide
    function showSlide(index) {
      // Normalizar índice
      if (index >= totalSlides) {
        currentSlide = 0;
      } else if (index < 0) {
        currentSlide = totalSlides - 1;
      } else {
        currentSlide = index;
      }

      // Remover clase active de todos los slides
      slides.forEach((slide, i) => {
        if (i === currentSlide) {
          slide.classList.add('active');
        } else {
          slide.classList.remove('active');
        }
      });

      // Actualizar indicadores
      const indicators = document.querySelectorAll('.carousel-indicator');
      indicators.forEach((indicator, i) => {
        if (i === currentSlide) {
          indicator.classList.add('bg-[rgb(var(--color-primary))]', 'w-6', 'sm:w-8');
          indicator.classList.remove('bg-gray-300');
        } else {
          indicator.classList.remove('bg-[rgb(var(--color-primary))]', 'w-6', 'sm:w-8');
          indicator.classList.add('bg-gray-300');
        }
      });

      // Actualizar contador
      const currentSlideElement = document.querySelector('.current-slide');
      if (currentSlideElement) {
        currentSlideElement.textContent = currentSlide + 1;
      }
    }

    // Navegación
    function nextSlide() {
      showSlide(currentSlide + 1);
      resetAutoplay();
    }

    function prevSlide() {
      showSlide(currentSlide - 1);
      resetAutoplay();
    }

    function goToSlide(index) {
      showSlide(index);
      resetAutoplay();
    }

    // Autoplay
    function startAutoplay() {
      if (autoplay && totalSlides > 1) {
        autoplayTimer = setInterval(() => {
          nextSlide();
        }, autoplayInterval);
      }
    }

    function stopAutoplay() {
      if (autoplayTimer) {
        clearInterval(autoplayTimer);
        autoplayTimer = null;
      }
    }

    function resetAutoplay() {
      stopAutoplay();
      startAutoplay();
    }

    // Event listeners
    const prevBtn = document.querySelector('.carousel-prev');
    const nextBtn = document.querySelector('.carousel-next');
    const indicators = document.querySelectorAll('.carousel-indicator');

    if (prevBtn) {
      prevBtn.addEventListener('click', prevSlide);
    }

    if (nextBtn) {
      nextBtn.addEventListener('click', nextSlide);
    }

    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => goToSlide(index));
    });

    // Navegación con teclado
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        prevSlide();
      } else if (e.key === 'ArrowRight') {
        nextSlide();
      }
    });

    // Pausar autoplay al pasar el ratón
    const carouselContainer = document.querySelector('.carousel-container');
    if (carouselContainer) {
      carouselContainer.addEventListener('mouseenter', stopAutoplay);
      carouselContainer.addEventListener('mouseleave', startAutoplay);
    }

    // Touch/swipe support
    let touchStartX = 0;
    let touchEndX = 0;

    const carouselSlides = document.querySelector('.carousel-slides');
    if (carouselSlides) {
      carouselSlides.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
      }, { passive: true });

      carouselSlides.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
      }, { passive: true });
    }

    function handleSwipe() {
      const swipeThreshold = 50;
      const diff = touchStartX - touchEndX;

      if (Math.abs(diff) > swipeThreshold) {
        if (diff > 0) {
          nextSlide();
        } else {
          prevSlide();
        }
      }
    }

    // Iniciar autoplay
    startAutoplay();

    // Marcar como inicializado
    window.carouselInitialized = true;
  }

  // Función para reinicializar el carrusel
  function reinitCarousel() {
    window.carouselInitialized = false;
    initCarousel();
  }

  // Inicialización inicial
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initCarousel);
  } else {
    initCarousel();
  }

  // Soporte para Astro View Transitions
  document.addEventListener('astro:page-load', reinitCarousel);
  document.addEventListener('astro:after-swap', reinitCarousel);

  // Exponer función globalmente para debug
  window.reinitCarousel = reinitCarousel;
</script>

<style>
  /* Estilos del carrusel */
  .carousel-slides {
    position: relative;
    aspect-ratio: 3 / 2;
    background: #f3f4f6;
  }

  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.6s ease-in-out;
    pointer-events: none;
  }

  .carousel-slide.active {
    opacity: 1;
    pointer-events: auto;
  }

  .carousel-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .carousel-caption {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.4s ease-out;
  }

  .carousel-slide.active .carousel-caption {
    opacity: 1;
    transform: translateY(0);
    transition-delay: 0.3s;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .carousel-slides {
      aspect-ratio: 4 / 3;
    }
    
    .carousel-prev,
    .carousel-next {
      padding: 0.5rem;
    }
  }

  /* Animaciones suaves */
  @media (prefers-reduced-motion: reduce) {
    .carousel-slide,
    .carousel-caption {
      transition-duration: 0.1s;
    }
  }
</style>

