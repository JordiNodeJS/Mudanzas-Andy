---
export let href: string = "#";
export let variant: "primary" | "secondary" | "outline" = "primary";
export let size: "sm" | "md" | "lg" = "md";
export let fullWidth: boolean = false;
export let disabled: boolean = false;
export let type: "button" | "submit" | "reset" = "button";
export let className: string = "";

const baseClasses = "inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2";
const sizeClasses = {
  sm: "px-3 py-2 text-sm",
  md: "px-4 py-2 text-base",
  lg: "px-6 py-3 text-lg"
};
const variantClasses = {
  primary: "bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500 shadow-sm",
  secondary: "bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500 shadow-sm",
  outline: "border-2 border-blue-600 text-blue-600 hover:bg-blue-50 focus:ring-blue-500"
};
const disabledClasses = "opacity-50 cursor-not-allowed";
const fullWidthClasses = "w-full";
---

{type === "button" ? (
  <button
    class={`${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${fullWidth ? fullWidthClasses : ""} ${disabled ? disabledClasses : ""} ${className}`}
    disabled={disabled}
    type={type}
  >
    <slot />
  </button>
) : (
  <a
    href={href}
    class={`${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${fullWidth ? fullWidthClasses : ""} ${disabled ? disabledClasses : ""} ${className}`}
    aria-disabled={disabled}
  >
    <slot />
  </a>
)}

<style>
  /* Estilos adicionales para mejorar la apariencia */
  button:not(:disabled):hover,
  a:not([aria-disabled="true"]):hover {
    transform: translateY(-1px);
  }
  
  button:not(:disabled):active,
  a:not([aria-disabled="true"]):active {
    transform: translateY(0);
  }
</style>
